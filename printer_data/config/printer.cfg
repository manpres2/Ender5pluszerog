[include fluidd.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include timelapse.cfg]
[include Adaptive_Mesh.cfg]
[include KAMP_Settings.cfg]

[exclude_object]
#[include adxl.cfg]

[force_move]
enable_force_move: True

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -33
y_offset: -11
#z_offset: 3.699 #decrease for moving UP
stow_on_each_sample: False
probe_with_touch_mode: True
pin_move_time: 0.5
pin_up_touch_mode_reports_triggered: True
#z_offset: 0 #decrease for moving UP
speed: 400
lift_speed: 400
samples: 1
sample_retract_dist: 1
samples_tolerance_retries: 3


[safe_z_home]
home_xy_position: 208, 186
speed: 400
z_hop: 10
z_hop_speed: 400

[bed_mesh]
speed: 300
horizontal_move_z: 6
mesh_min: 20, 20
mesh_max: 300,300
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0   # Default Z Avg.
mesh_pps: 2,2  # Default 2,2
bicubic_tension: 0.2

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: PC0
position_endstop:350
position_max: 350
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.900
hold_current: 0.500
#stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop:350
position_max: 350
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.900
hold_current: 0.500
#stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 4
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
homing_speed: 250
position_max: 400
position_min: -10

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.700
hold_current: 0.550
#stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.36
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 200
max_extrude_cross_section: 150
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
smooth_time: 0.4
min_extrude_temp: 0
min_temp: 0
max_temp: 300
pressure_advance: 0.075#uncomment to enable pressure advance
#pressure_advance_smooth_time: 0.040 # uncomment to enable pressure advance

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 45
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
#stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
smooth_time: 1
min_temp: 0
max_temp: 130

[heater_fan controller_fan]
pin: PB15
heater: heater_bed
heater_temp: 100

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_5B0032000B50414733303120-if00
# serial: /dev/ttyAMA0
restart_method: command

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[input_shaper]
shaper_freq_x: 53 # frequency for the X mark of the test model
shaper_type_x: zv
shaper_freq_y: 51 # frequency for the Y mark of the test model
shaper_type_Y: 2hump_ei

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 9000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[filament_switch_sensor RunoutSensor]
pause_on_runout: True
switch_pin: !PB6
event_delay: 2.0
runout_gcode:
    PAUSE

[display_status]

[pause_resume]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[respond]
default_type: echo

# ========== STOCK CREALITY TOUCHSCREEN ==========
#[dgus_display]
#type: t5uid1
#uart_bus: usart2
#implementation: dgus_printer_menu
#volume: 50
# ================================================



[gcode_macro G29]
gcode: 
  G28
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=p1
  G1 X0 Y0 Z5 F4000

[bed_mesh]
speed: 200
horizontal_move_z: 6
mesh_min: 20, 20
mesh_max: 300,300
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0   # Default Z Avg.
mesh_pps: 2,2  # Default 2,2
bicubic_tension: 0.2

[bed_screws]
screw1: 60,30
screw2: 350,30
screw3: 350,330
screw4: 60,330

[screws_tilt_adjust]
screw1: 60,30
screw1_name: front left screw
screw2: 350,30
screw2_name: front right screw
screw3: 350,330
screw3_name: rear right screw
screw4: 60,330
screw4_name: rear left screw
horizontal_move_z: 7
speed: 250
screw_thread: CW-M4  

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    #G28
    # Move the nozzle near the bed
    #G1 Z5 F3000
    # Move the nozzle very close to the bed
    #G1 Z0.15 F300
    # Wait for bed to reach temperature
    #M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    #M109 S{EXTRUDER_TEMP}
    # Get Bed MESH
    G29
    G92 E0 ;Reset Extrude
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X10.1 Y20 Z0.28 F5000.0 ;Move to start position
    G1 X10.1 Y200.0 Z0.28 F1500.0 E20 ;Draw the first line
    G1 X10.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X10.4 Y20 Z0.28 F1500.0 E20 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up


[display_status]

[pause_resume]

[save_variables]
filename: ~/savedVariables.cfg

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': ns.offsets.z + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"
    
[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|

[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state 

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
#default_parameter_E: 1.7
gcode:
  {% set E = params.E|default(1.7) %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
#default_parameter_E: 1      # edit to your preferred retract length
gcode:
    {% set E = params.E|default(1) %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT



#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 39.780
#*# pid_ki = 11.050
#*# pid_kd = 35.802
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.205
#*# pid_ki = 0.674
#*# pid_kd = 1388.596
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.243750, -0.251250, -0.247500, -0.232500, -0.237500, -0.227500
#*# 	-0.220000, -0.233750, -0.196250, -0.205000, -0.217500, -0.211250
#*# 	-0.233750, -0.221250, -0.172500, -0.177500, -0.201250, -0.220000
#*# 	-0.227500, -0.198750, -0.152500, -0.158750, -0.171250, -0.200000
#*# 	-0.228750, -0.201250, -0.157500, -0.166250, -0.188750, -0.218750
#*# 	-0.243750, -0.210000, -0.176250, -0.171250, -0.211250, -0.231250
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 6
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
#*#
#*# [bltouch]
#*# z_offset = 2.600
